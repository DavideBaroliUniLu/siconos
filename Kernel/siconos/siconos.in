#!/bin/sh
# Siconos-Kernel version 1.1.2, Copyright INRIA 2005-2006.
# Siconos is a program dedicated to modeling, simulation and control
# of non smooth dynamical systems.	
# Siconos is a free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# Siconos is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Siconos; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# Contact: Vincent ACARY vincent.acary@inrialpes.fr 
#	

#-----------
# Variables
#-----------

DIR=`pwd`;
SICONOSPATH=@prefix@
NUMERICSPATH=@NUMERICS_PATH@

# siconos shared files (xml_schema, KernelConfig, DefaultPlugin .so ...) location.
SICONOS_SHAREPATH=$SICONOSPATH/share/siconos-kernel;


#-----------
# functions
#-----------

function compilePlugins() {
    listdir=`find . -type d`;
    for dir in $listdir; do
	cd $dir;
	if test "`ls *Plugin.cpp 2>/dev/null`" != ""; then
	    echo " --> Plug-in files location: $dir ";      
	    make -f $SICONOS_SHAREPATH/MakefilePluginSample plugin
	    if test "${LD_LIBRARY_PATH}test" = "test"; then
		export LD_LIBRARY_PATH=$PWD;
	    else
		export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH; 
	    fi;
	fi;
	cd $DIR;
    done;
    #echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH";
}

function cleanAll() {
    listdir=`find . -type d`;
    for dir in $listdir; do
	cd $dir;
	make -f $SICONOS_SHAREPATH/MakefilePluginSample clean	    
	cd $DIR;
    done;
}

function cartridge() {
    echo "|=========================================================|";
    echo "| Siconos-Kernel version 1.1.2, Copyright INRIA 2005-2006.|";
    echo "|                                                         |";
    echo "|     Free software under GNU General Public License.     |";
    echo "|=========================================================|"; 
}

#------
# main
#------

cartridge;
# parameters and paths
echo " --> SICONOSPATH= $SICONOSPATH"
export SICONOSPATH=$SICONOSPATH;
if test "$SICONOSPATH" = ""; then
    echo " /!\ SICONOSPATH undefined => stop /!\ ";
    exit 1;
fi;

echo " --> NUMERICSPATH= $NUMERICSPATH"
export NUMERICSPATH=$NUMERICSPATH;
if test "$NUMERICSPATH" = ""; then
    echo " /!\ NUMERICSPATH undefined => stop /!\ ";
    exit 1;
fi;

echo " --> LD_LIBRARY_PATH= $LD_LIBRARY_PATH"
if test "${LD_LIBRARY_PATH}test" = "test"; then
   export LD_LIBRARY_PATH=$SICONOSPATH/lib:$SICONOS_SHAREPATH:$NUMERICSPATH/lib/:/usr/local/lib;  
else
   export LD_LIBRARY_PATH=$SICONOSPATH/lib:$SICONOS_SHAREPATH:$LD_LIBRARY_PATH:$NUMERICSPATH/lib:/usr/local/lib; 
fi;	 

clean="false";
while getopts ch OPTION
  do
  case "$OPTION" in
      c) clean=true;;
      h) echo " --> Path to a sample source file : compiles, links and runs this sample";
	 echo "     -c : cleans the current repertory (deletes binary files, etc.)";
	 echo "     -h : prints this help and exits";
	 exit 0;
	 ;;
  esac
done
#echo "$# $0 $1 $2"
if "$clean" = "true"; then
    if [ $# -eq 2 ]; then
	if [ ! -d $2 ]; then
	    echo "/!\ clean $2 -> no such file or directory. /!\ ";
	    exit 1;
	else
	    echo " --> Cleaning ok.";
	    cd $2;
	    cleanAll;
	    cd ..;
	    exit 0;
	fi;	    
    else	
	cleanAll;
	exit 0;
    fi;
fi;


sample="false";
# test if there are one or two argument. if not, exit
if [ $# -gt 1 ]; then
    echo "$0 : Bad number of argument";
    exit 1;
fi;
	
# test if command file exist. if not, exit
if [ $# -eq 1 ]; then
    if [ ! -f $1 ]; then
	echo "$1: file not found.";
	sample="false"
	exit 1;
    else
	sample="true"
    fi;
fi;
    

# plugin compilation
compilePlugins;

if "$sample" = "true"; then
# sample compilation
echo " --> Sample location is: `dirname $1`";
    DIR_SAMPLE=`dirname $1`;

    if [ ! -d $DIR_SAMPLE ]; then
	echo "/!\ Can not find sample location. /!\ ";
	exit 1;
    else
	cd $DIR_SAMPLE;
	make -f $SICONOS_SHAREPATH/MakefilePluginSample OBJ=`basename $1` sample run
	cd $DIR;
    fi;
fi;

exit 0;
