SICONOSPATH=@prefix@
include $(SICONOSPATH)/share/SICONOS/KernelConfig.sh

SAMPLE_SOURCES = $(OBJ)
SAMPLE_OBJ  = $(patsubst %.cpp,%.o,  $(SAMPLE_SOURCES))
SAMPLE_EXE  = $(patsubst %.cpp,%_EXE,  $(SAMPLE_SOURCES))

C_SOURCES = $(wildcard *.c)
C_OBJ  = $(patsubst %.c,%.o,  $(C_SOURCES))

sample:$(SAMPLE_OBJ) $(SAMPLE_EXE)
	
.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(LIBEXT_INCLUDES) -I $(SICONOSPATH)/include $<

$(SAMPLE_EXE):$(SAMPLE_OBJ)
	echo "$(SAMPLE_EXE):"
#	$(CXX) -o $@ $< -L$(SICONOSPATH)/lib $(SICONOS_LIBS) $(LIBEXT_LDFLAGS)
	$(CXX) -o $@ $< $(LIBEXT_LDFLAGS) -L$(SICONOSPATH)/lib -lSiconosKernel

run:$(SAMPLE_EXE) 
	./$(SAMPLE_EXE)

#cleansample:
#	rm -f *_EXE *.o *.output;


PLUGIN_SOURCES = $(wildcard *Plugin.cpp)
PLUGIN_OBJ  = $(patsubst %.cpp,%.o,  $(PLUGIN_SOURCES))
PLUGIN_LIB = $(patsubst %.cpp,%.so,  $(PLUGIN_SOURCES))

plugin:$(PLUGIN_OBJ) $(PLUGIN_LIB)

	
.c.o:
	$(CC) -c $(CXXFLAGS) $<

%.so:%.cpp $(C_OBJ)
	$(CXX) $(CXX_DYNLIB) $(C_OBJ) $< -o $@

#cleanplugin:
#	rm -f $(PLUGIN_OBJ) $(PLUGIN_LIB)


#clean:cleansample cleanplugin
clean:	
	rm -f *_EXE *.o *.output *.so;
