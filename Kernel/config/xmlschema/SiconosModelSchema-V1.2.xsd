<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">


<!--~~~~~~~~~~~~~ Definitions of used types ~~~~~~~~~~~~~-->
<xsd:simpleType name="positiveDouble">
   	<xsd:restriction base="xsd:double">
		<xsd:minInclusive value="0"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="boolean">
	<xsd:restriction base="xsd:boolean">
<!--		<xsd:enumeration value="true"/>
		<xsd:enumeration value="false"/>
-->	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleDSValues">
   	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LagrangianDS"/>
		<xsd:enumeration value="LagrangianLinearTIDS"/>
		<xsd:enumeration value="LinearDS"/>
		<xsd:enumeration value="NonLinearDS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleRelationValues">
  	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LagrangianLinear"/>
		<xsd:enumeration value="LagrangianNonLinear"/>
		<xsd:enumeration value="LinearTimeInvariant"/>
   	</xsd:restriction>
</xsd:simpleType>


<xsd:simpleType name="PossibleStrategyValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="TimeStepping"/>
	<xsd:enumeration value="EventDriven"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleNSLawValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="Relay"/>
	<xsd:enumeration value="ComplementarityCondition"/>
	<xsd:enumeration value="NewtonImpactLaw"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleOneStepIntegratorValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="Moreau"/>
	<xsd:enumeration value="Adams"/>
	<xsd:enumeration value="LSODAR"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleOneStepNSProblemValues">
   <xsd:restriction base="xsd:string">
	<xsd:enumeration value="LCP"/>
	<xsd:enumeration value="CFD"/>
	<xsd:enumeration value="QP"/>
	<xsd:enumeration value="Relay"/>
   </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="BoundaryConditionValues">
   <xsd:restriction base="xsd:string">
	<xsd:enumeration value="Linear"/>
	<xsd:enumeration value="NLinear"/>
	<xsd:enumeration value="Periodic"/>
   </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="NormTypeValues">
   <xsd:restriction base="xsd:string">
	<xsd:enumeration value="max"/>
	<xsd:enumeration value="..."/>
   </xsd:restriction>
</xsd:simpleType>


<xsd:simpleType name="doubleList">
	<xsd:list itemType="xsd:double"  /> <!-- use="optional"-->
</xsd:simpleType>

<xsd:simpleType name="intList">
	<xsd:list itemType="xsd:nonNegativeInteger"  /> <!-- use="optional"-->
</xsd:simpleType>


<xsd:simpleType name="pluginType">
	<xsd:restriction base="xsd:string">
	  <xsd:pattern value="[a-zA-Z0-9/.]+:[a-zA-Z0-9]+"/>
	</xsd:restriction>			  
</xsd:simpleType>


<xsd:complexType name="pluginDef">
	<xsd:simpleContent>
		<xsd:extension base="doubleList">
		<!--calculated with a plugin function -->
		<xsd:attribute name="plugin" type="pluginType"/>
		</xsd:extension>
	</xsd:simpleContent>
</xsd:complexType>	


<xsd:complexType name="vector">
	<xsd:simpleContent>
		<xsd:extension base="doubleList">
	     
		<!--Vector is defined in the tag -->
		<xsd:attribute name="vectorSize" type="xsd:nonNegativeInteger" use="optional" default ="1"/>
		<!--Vector is defined in a file -->
		<xsd:attribute name="vectorFile" type="xsd:string" use="optional"/>
		<!--Vector is calculated with a plugin function -->
		<xsd:attribute name="vectorPlugin" type="pluginType" use="optional"/>

	  </xsd:extension>
	</xsd:simpleContent>
</xsd:complexType>

<!--   -->
<xsd:complexType name="matrix">
	<xsd:sequence>
		<xsd:element name="row" minOccurs="0" maxOccurs="unbounded" type="doubleList"/>
	</xsd:sequence>
	<!--Matrix is defined in the tag -->
	<xsd:attribute name="matrixColSize" type="xsd:nonNegativeInteger" use="optional"/>
	<xsd:attribute name="matrixRowSize" type="xsd:nonNegativeInteger" use="optional"/>
	<!--Matrix is defined in a file -->
	<xsd:attribute name="matrixFile" type="xsd:string" use="optional"/>
	<!--Matrix is calculated with a plugin function -->
	<xsd:attribute name="matrixPlugin" type="pluginType" use="optional"/>
</xsd:complexType>


<xsd:complexType name="matrixData">
	<xsd:sequence>
		<xsd:element name="row" minOccurs="0" maxOccurs="unbounded" type="doubleList"/>
	</xsd:sequence>
	<!--Matrix is defined in the tag -->
	<xsd:attribute name="matrixColSize" type="xsd:nonNegativeInteger" use="optional"/>
	<xsd:attribute name="matrixRowSize" type="xsd:nonNegativeInteger" use="optional"/>
</xsd:complexType>

<xsd:complexType name="matrixPlugin">
	<!--Matrix is calculated with a plugin function -->
	<xsd:attribute name="matrixPlugin" type="pluginType" use="optional"/>
</xsd:complexType>

<xsd:complexType name="matrixFile">
	<!--Matrix is defined in a file -->
	<xsd:attribute name="matrixFile" type="xsd:string" use="optional"/>
</xsd:complexType>

<!--   -->


<xsd:complexType name="memory">
	<xsd:sequence>
		<xsd:element name="Memory" minOccurs="0" maxOccurs="unbounded" type="vector"/>
	</xsd:sequence>
	<xsd:attribute name="sizeMax" type="xsd:nonNegativeInteger" use="required"/>
</xsd:complexType>


<!-- Time of the Model -->
<xsd:complexType name="ModelTime">
	<xsd:all>
		<xsd:element name="t" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
		<xsd:element name="t0" type="positiveDouble" minOccurs="1" maxOccurs="1"/>
		<xsd:element name="T" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
	</xsd:all>
</xsd:complexType>

<!-- Boundary Condition -->
<xsd:complexType name="BoundaryCondition">
<!--	<xsd:sequence> -->
		<xsd:choice minOccurs='1' maxOccurs='1'>
			<xsd:element name="Linear">
				<xsd:complexType>
				<xsd:all>
					<xsd:element name="Omega" type="vector" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="Omega0" type="matrix" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="OmegaT" type="matrix" minOccurs="1" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="NLinear">
				<xsd:complexType>
				<xsd:all>
					<xsd:element name="empty1" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Periodic">
				<xsd:complexType>
				<xsd:all>
					<xsd:element name="empty2" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
<!--	</xsd:sequence>  -->
<!--	<xsd:attribute name="type" type="BoundaryConditionValues" use="required"/> -->
</xsd:complexType>


<!-- the different kind of solving method : -->
<xsd:element name="Lemke">
	<xsd:complexType>
<!--		<xsd:attribute name="tolerance" type="xsd:double" use="optional"/> -->
		<xsd:attribute name="maxIter" type="xsd:positiveInteger" use="optional"/>
	</xsd:complexType>
</xsd:element>

<xsd:element name="Gsnl">
	<xsd:complexType>
		<xsd:attribute name="maxIter" type="xsd:positiveInteger" use="optional"/>
		<xsd:attribute name="tolerance" type="xsd:double" use="optional"/>
		<xsd:attribute name="normType" type="NormTypeValues" use="optional"/>
	</xsd:complexType>
</xsd:element>

<xsd:element name="Gcp">
	<xsd:complexType>
		<xsd:attribute name="maxIter" type="xsd:positiveInteger" use="optional"/>
		<xsd:attribute name="tolerance" type="xsd:double" use="optional"/>
		<xsd:attribute name="normType" type="NormTypeValues" use="optional"/>
	</xsd:complexType>
</xsd:element>

<xsd:element name="Latin">
	<xsd:complexType>
		<xsd:attribute name="maxIter" type="xsd:positiveInteger" use="optional"/>
		<xsd:attribute name="tolerance" type="xsd:double" use="optional"/>
		<xsd:attribute name="normType" type="NormTypeValues" use="optional"/>
		<xsd:attribute name="searchDirection" type="xsd:double" use="optional"/>
	</xsd:complexType>
</xsd:element>


<!--~~~~~~ DS_Concerned for Interaction~~~~~~~~-->
<xsd:complexType name="Interaction_DS_ConcernedType">
	<xsd:sequence>
	<!--~~~  DS ~~~~-->
		<xsd:element name="DS" minOccurs="1" maxOccurs="unbounded">
		<xsd:complexType>
			<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
			<xsd:attribute name="interactsWithDS_Number" type="xsd:positiveInteger" use="required"/>
		</xsd:complexType>
<!--		<xsd:keyref name="InteractionDSKeyRef" refer="DSKey">
			<xsd:selector xpath='.'/>
			<xsd:field xpath='@number'/>
			<xsd:field xpath='@interactsWithDS_Number'/>
		</xsd:keyref> -->
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="optional"/>
	<xsd:attribute name="all" type="boolean" use="optional"/>
</xsd:complexType>

<!--~~~~~~ special type to provide a list of DS (for interaction, OSI ...) ~~~~~~~~-->
<xsd:complexType name="list_of_DS">
	<xsd:sequence>
		<xsd:element name="DSList" minOccurs="0" maxOccurs="unbounded" type="vector"/>
	</xsd:sequence>
	<xsd:attribute name="all" type="boolean" use="optional" default="false"/>
</xsd:complexType>

<!--~~~~~~ DS_Concerned for OneStepIntegrator~~~~~~~~-->
<xsd:complexType name="OSI_DS_ConcernedType">
	<xsd:sequence>
	<!--~~~~~~~~~  DS ~~~~~~~~~~-->
		<xsd:element name="DS" minOccurs="1" maxOccurs="unbounded">
			<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
			</xsd:complexType>
<!--			<xsd:keyref name="OneStepIntegratorDSKeyRef" refer="DSKey">
				<xsd:selector xpath='.//DS'/>
				<xsd:field xpath='@number'/>
			</xsd:keyref> -->
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="optional"/>
	<xsd:attribute name="all" type="boolean" use="optional"/>
</xsd:complexType>


<!--~~~~~~ DS_Concerned for DSInputOutput ~~~~~~~~-->
<xsd:complexType name="DSIO_DS_ConcernedType">
	<xsd:sequence>
	<!--~~~~~~~~~  DS ~~~~~~~~~~-->
		<xsd:element name="DS" minOccurs="1" maxOccurs="unbounded">
			<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
			</xsd:complexType>
<!--			<xsd:keyref name="DSInputOutputDSKeyRef" refer="DSIOKey">
				<xsd:selector xpath='.//DSInputOutput'/>
				<xsd:field xpath='@number'/>
			</xsd:keyref> -->
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="optional"/>
	<xsd:attribute name="all" type="boolean" use="optional"/>
</xsd:complexType>


<!--~~~~~~ DSInputOutput_Concerned ~~~~~~~~-->
<xsd:complexType name="EC_DSIO_ConcernedType">
	<xsd:sequence>
	<!--~~~~~~~~~  DSIO ~~~~~~~~~~-->
		<xsd:element name="DSInputOutput" minOccurs="1" maxOccurs="unbounded">
			<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
			</xsd:complexType>
<!--			<xsd:keyref name="EqualityConstraintDSIOKeyRef" refer="DSIOKey">
				<xsd:selector xpath='.//DSInputOutput'/>
				<xsd:field xpath='@number'/>
			</xsd:keyref> -->
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="optional"/>
	<xsd:attribute name="all" type="boolean" use="optional"/>
</xsd:complexType>



<!--~~~~~~ Interaction_Concerned for OneStepNSProblem~~~~~~~~-->
<xsd:complexType name="InteractionConcernedType">
	<xsd:sequence>
	<!--~~~~~  Interaction ~~~~~-->
		<xsd:element name="Interaction" minOccurs="0" maxOccurs="unbounded">
		<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
		</xsd:complexType>
<!--		<xsd:keyref name="OneStepNSProblemInteractionKeyRef" refer="InteractionKey">
			<xsd:selector xpath='.//Interaction'/>
			<xsd:field xpath='@number'/>
		</xsd:keyref> -->
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="optional"/>
	<xsd:attribute name="all" type="boolean" use="optional"/>
</xsd:complexType>



<!--~~~~~~~~~~~~~~~~~~~~~~~~ Model ~~~~~~~~~~~~~~~~~~~~~~~~~-->
<xsd:element name="SiconosModel">
	<xsd:complexType>
		<xsd:sequence>
				<xsd:element name="Title" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Author" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Description" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Date" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="SchemaXML" type="xsd:string" minOccurs="1" maxOccurs="1"/>
	<!--~~~~~~~~~~~~~~~~~~~~~~~ Time ~~~~~~~~~~~~~~~~~~~~~~~~-->
	<xsd:element name="Time" type="ModelTime" minOccurs="1" maxOccurs="1"/>

   <!--~~~~~~~~~~~~~~~~~~~~~~ NSDS ~~~~~~~~~~~~~~~~~~~~~~~~~~-->

	<xsd:element name="NSDS" minOccurs="1" maxOccurs="1">
		<xsd:complexType>
			<xsd:sequence>

	<!--~~~~~~~~~~~~~ DS_Definition ~~~~~~~~~~~~~-->
	<xsd:choice minOccurs='1' maxOccurs='1'>
		<xsd:element name="DS_LMGC90" minOccurs="1" maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
				<xsd:element name="empty" type="xsd:string" minOccurs='0' maxOccurs='1'/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:element>
		
		<xsd:element name="DS_Definition" minOccurs="1" maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
		  <!--~~~~~~~~~~~~~~~~~ DS ~~~~~~~~~~~~~~~~~-->
		<xsd:choice minOccurs='0' maxOccurs='unbounded'>
			<xsd:element name="NonLinearDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='1' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:nonNegativeInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='1' maxOccurs='1'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LinearDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="x" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xDot" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xDotMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="x0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="StepsInMemory" type="xsd:nonNegativeInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs="0" maxOccurs="0"/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs="0" maxOccurs="0"/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="A" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="E" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="u" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="b" type="vector" minOccurs="1" maxOccurs="1"/>
						
						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LagrangianLinearTIDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:nonNegativeInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="ndof" type="xsd:integer" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="q0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="qMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="VelocityMemory" type="memory" minOccurs="0" maxOccurs="1"/>

<!--						<xsd:element name="Fint" type="vector" minOccurs='0' maxOccurs='0'/> -->
						<xsd:element name="Fext" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="JacobianQFint" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianVelocityFint" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianQQNLInertia" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianVelocityQNLInertia" type="matrix" minOccurs='0' maxOccurs='0'/>

						<xsd:element name="M" type="matrix" minOccurs="1" maxOccurs="1"/>

<!--					<xsd:element name="QNLInertia" type="vector" minOccurs='0' maxOccurs='0'/>
-->	
						<xsd:element name="K" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="C" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>

					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LagrangianDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:nonNegativeInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='0'/>

						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="ndof" type="xsd:integer" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="q0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="qMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="VelocityMemory" type="memory" minOccurs="0" maxOccurs="1"/>

						<xsd:element name="Fint" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="Fext" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="JacobianQFint" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianVelocityFint" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianQQNLInertia" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianVelocityQNLInertia" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="M" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="QNLInertia" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
				</xsd:sequence> 
			</xsd:complexType>

			<xsd:unique name="DSKey">
		        <xsd:selector xpath='.//LagrangianDS|.//LagrangianLinearTIDS|.//LinearDS|.//NonLinearDS'/>
		        <xsd:field xpath='./@number'/>
				<!--<xsd:field xpath='@number'/>-->
		     </xsd:unique>
		</xsd:element>
	</xsd:choice>

		<!--~~~~~~~~ DSInputOutput_Definition ~~~~~~~~~~-->
		<xsd:element name="DSInputOutput_Definition" minOccurs='0' maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
					<xsd:choice minOccurs="1" maxOccurs="unbounded">
						<xsd:element name="LinearDSIO">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DS_Concerned" type="DSIO_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="A" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="B" type="matrix" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="NonLinearDSIO">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DS_Concerned" type="DSIO_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="LagrangianDSIO">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DS_Concerned" type="DSIO_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="LagrangianLinearDSIO">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DS_Concerned" type="DSIO_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="H" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="b" type="vector" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:key name="DSIOKey">
	        	<xsd:selector xpath='LinearDSIO|NonLinearDSIO|LagrangianDSIO'/>
		        <xsd:field xpath='@number'/>
		    </xsd:key>
		</xsd:element>
		
		<!--~~~~~~~~ EqualityConstraint_Definition ~~~~~~~~~~-->
		<xsd:element name="EqualityConstraint_Definition" minOccurs='0' maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
					<xsd:choice minOccurs="1" maxOccurs="unbounded">
						<xsd:element name="LinearEC">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DSInputOutput_Concerned" type="EC_DSIO_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="G" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="LinearTIEC">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DSInputOutput_Concerned" type="EC_DSIO_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="G" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="NonLinearEC">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DSInputOutput_Concerned" type="EC_DSIO_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="G" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="LagrangianEC">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DSInputOutput_Concerned" type="EC_DSIO_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="G" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="LagrangianLinearEC">
							<xsd:complexType>
									<xsd:all>
										<xsd:element name="DSInputOutput_Concerned" type="EC_DSIO_ConcernedType" minOccurs='1' maxOccurs="1"/>
										<xsd:element name="G" type="matrix" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="0" maxOccurs="1"/>
									</xsd:all>
									<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:key name="ECKey">
	        	<xsd:selector xpath='LinearEC|NonLinearEC|LinearTIEC|LagrangianEC'/>
		        <xsd:field xpath='@number'/>
		    </xsd:key>
		</xsd:element>

		<!--~~~~~~~~ Interaction_Definition ~~~~~~~~~~-->
		<xsd:element name="Interaction_Definition" minOccurs='0' maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
		  <!--~~~~~~~~~~~ Interaction ~~~~~~~~~~~~~~~-->
			<xsd:element name="Interaction" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="nInter" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>	
						<xsd:element name="Status" type="intList" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="y" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="lambda" type="vector" minOccurs='0' maxOccurs='1'/>
						<!--~~~~~~ DS_Concerned ~~~~~~-->
						<xsd:element name="DS_Concerned" type="list_of_DS" minOccurs='1' maxOccurs="1"/>
						
				<!--~~~~~~~~ Relation ~~~~~~~~-->
				<xsd:element name="Interaction_Content" minOccurs="1" maxOccurs="1">
					<xsd:complexType>
					<xsd:sequence>
						<xsd:choice minOccurs="1" maxOccurs="1">
							<xsd:element name="NonLinear">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="LinearTimeInvariant">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="C" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="D" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="E" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="a" type="vector" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
		
							<xsd:element name="LagrangianLinear">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="H" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="b" type="vector" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="LagrangianNonLinear">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
						</xsd:choice>
					

			<!--~~~~~~~ NS_Law ~~~~~~~~~~~-->
						<xsd:choice minOccurs="1" maxOccurs="1">
							<xsd:element name="Relay">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="c" type="xsd:double" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="d" type="xsd:double" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="NewtonImpactLaw">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="e" type="xsd:double" minOccurs='1' maxOccurs='1'/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="NewtonImpactFrictionLaw">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="en" type="xsd:double" minOccurs='1' maxOccurs='1'/>
										<xsd:element name="et" type="xsd:double" minOccurs='1' maxOccurs='1'/>
										<xsd:element name="mu" type="xsd:double" minOccurs='1' maxOccurs='1'/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="ComplementarityCondition">
<!--								<xsd:complexType>
									<xsd:all>
										<xsd:element name="empty" type="xsd:double" minOccurs='0' maxOccurs='0'/>
									</xsd:all>
								</xsd:complexType> -->
							</xsd:element>
						</xsd:choice>
					</xsd:sequence>
					</xsd:complexType>
				</xsd:element>

					</xsd:all>
					<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
<!--			  		<xsd:attribute name="isActive" type="boolean" use="optional"/>  -->
				</xsd:complexType>
		
		     <xsd:unique name="InteractionKey">
		        <xsd:selector xpath='.//Interaction'/>
		        <xsd:field xpath='./@number'/>
		     </xsd:unique>

				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

				</xsd:sequence>
			<xsd:attribute name="bvp" type="boolean" use="optional"/>
		</xsd:complexType>
	</xsd:element>


    <!--~~~~~~~~~~~~~~~~~~~~ Strategy ~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<xsd:element name="Strategy" minOccurs='0' maxOccurs="1">
		<xsd:complexType>
			<xsd:sequence>
	    
	    	<!--~~~~~~~~~~~~ TimeDiscretisation ~~~~~~~~~~~-->
			<xsd:element name="TimeDiscretisation" minOccurs='1' maxOccurs='1'>
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="h" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="N" type="xsd:positiveInteger" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="tk" type="vector" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="hMin" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="hMax" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
					</xsd:all>
					<xsd:attribute name="isConstant" type="boolean" use="required"/>
				</xsd:complexType>
			</xsd:element>

		<!--~~~~~~~ OneStepIntegrator_Definition ~~~~~~~-->
		<xsd:choice minOccurs='1' maxOccurs='1'>
			<xsd:element name="OneStepIntegrator_LMGC90" minOccurs="1" maxOccurs="1">
				<xsd:complexType>
					<xsd:sequence>
					<xsd:element name="empty" type="xsd:string" minOccurs='0' maxOccurs='1'/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			
			<xsd:element name="OneStepIntegrator_Definition" minOccurs='1' maxOccurs="1">
				<xsd:complexType>
					<xsd:sequence>
		   <!--~~~~~~~~~~~ OneStepIntegrator ~~~~~~~~~~~-->
			<xsd:choice minOccurs='1' maxOccurs='unbounded'>
				<xsd:element name="Moreau">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
<!--							<xsd:element name="r" type="xsd:integer"  minOccurs='1' maxOccurs="1"/> -->
							<xsd:element name="Theta" type="positiveDouble" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="W" type="matrix" minOccurs="0" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				
				<xsd:element name="Adams">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="r" type="xsd:integer" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				
				<xsd:element name="LSODAR">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="r" type="xsd:integer" minOccurs="0" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
						
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>


 		<!--~~~~~~~~~~~~~ OneStepNSProblem ~~~~~~~~~~~~~~-->
	<xsd:element name="OneStepNSProblem" minOccurs="0" maxOccurs="1">
	<xsd:complexType>
		<xsd:sequence>
	 		<xsd:choice minOccurs="1" maxOccurs="1">
				<xsd:element name="LCP">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="n" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="M" type="matrix" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Interaction_Concerned" type="InteractionConcernedType" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				
				<xsd:element name="CFD">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="n" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="M" type="matrix" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Interaction_Concerned" type="InteractionConcernedType" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
	
				<xsd:element name="QP">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="n" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Q" type="matrix" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="p" type="vector" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Interaction_Concerned" type="InteractionConcernedType" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="Solver" minOccurs="0" maxOccurs="1">
				<xsd:complexType>
					<xsd:choice minOccurs="1" maxOccurs="1">
						<xsd:element name="LcpSolving">
						<xsd:complexType>
							<xsd:choice>
							<xsd:element ref="Lemke"/>
							<xsd:element ref="Gsnl"/>
							<xsd:element ref="Gcp"/>
							<xsd:element ref="Latin"/>
							</xsd:choice>
						</xsd:complexType>
						</xsd:element>

						<xsd:element name="RelayPrimalSolving">
						<xsd:complexType>
							<xsd:choice>
							<xsd:element ref="Gsnl"/>
							<xsd:element ref="Gcp"/>
							<xsd:element ref="Latin"/>
							</xsd:choice>
						</xsd:complexType>
						</xsd:element>
						
						<xsd:element name="RelayDualSolving">
						<xsd:complexType>
							<xsd:choice>
							<xsd:element ref="Gsnl"/>
							<xsd:element ref="Gcp"/>
							<xsd:element ref="Latin"/>
							</xsd:choice>
						</xsd:complexType>
						</xsd:element>
						
						<xsd:element name="ContactFrictionPrimalSolving">
						<xsd:complexType>
							<xsd:choice>
							<xsd:element ref="Gsnl"/>
							<xsd:element ref="Gcp"/>
							<xsd:element ref="Latin"/>
							</xsd:choice>
						</xsd:complexType>
						</xsd:element>
												
						<xsd:element name="ContactFrictionDualSolving">
						<xsd:complexType>
							<xsd:choice>
							<xsd:element ref="Latin"/>
							<xsd:element ref="Lemke"/>
							<xsd:element ref="Gsnl"/>
							<xsd:element ref="Gcp"/>
							</xsd:choice>
						</xsd:complexType>

						</xsd:element>
					</xsd:choice>
					
				<xsd:attribute name="lib" type="xsd:string" use="optional"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	</xsd:element>
	
			</xsd:sequence>
			<xsd:attribute name="type" type="PossibleStrategyValues" use="required"/>
		</xsd:complexType>
	</xsd:element>


			</xsd:sequence>
			
		</xsd:complexType>
	</xsd:element>
	
</xsd:schema>
