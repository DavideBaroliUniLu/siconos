<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.0</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="utilsClassDiagram" href="/scratch/Franck/New_Sico/siconos/trunk/Docs/Dev/Kernel_dev/figures/utilsClassDiagram.xmi" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <docsettings viewid="2016" documentation="" uniqueid="2496" />
  <UML:Model>
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2017" name="int" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2018" name="char" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2019" name="bool" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2020" name="float" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2021" name="double" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2022" name="long" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2023" name="short" />
   <UML:DataType stereotype="datatype" visibility="public" xmi.id="2024" name="string" />
   <UML:Class stereotype="class" visibility="public" xmi.id="2025" name="SiconosVector" >
    <UML:Operation visibility="public" xmi.id="2027" type="virtual bool" isAbstract="true" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2028" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2029" type="virtual double &amp;" isAbstract="true" name="()" >
     <UML:Parameter visibility="private" xmi.id="2030" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2031" type="virtual SiconosVector &amp;" isAbstract="true" name="*=" >
     <UML:Parameter visibility="private" xmi.id="2032" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2033" type="virtual SiconosVector &amp;" isAbstract="true" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2034" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2035" type="virtual SiconosVector &amp;" isAbstract="true" name="-=" >
     <UML:Parameter visibility="private" xmi.id="2036" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2037" type="virtual SiconosVector &amp;" isAbstract="true" name="/=" >
     <UML:Parameter visibility="private" xmi.id="2038" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2039" type="virtual SiconosVector &amp;" isAbstract="true" name="=" >
     <UML:Parameter visibility="private" xmi.id="2040" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2041" type="virtual bool" isAbstract="true" name="==" >
     <UML:Parameter visibility="private" xmi.id="2042" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2043" type="" name="SiconosVector" />
    <UML:Operation visibility="public" xmi.id="2044" type="virtual void" isAbstract="true" name="display" />
    <UML:Operation visibility="public" xmi.id="2045" type="virtual double *" isAbstract="true" name="getArray" />
    <UML:Operation visibility="public" xmi.id="2046" type="virtual std :: vector &lt; SiconosVector * >" isAbstract="true" name="getSvref" />
    <UML:Operation visibility="public" xmi.id="2047" type="virtual std :: vector &lt; int >" isAbstract="true" name="getTabIndex" />
    <UML:Operation visibility="public" xmi.id="2048" type="virtual const double" isAbstract="true" name="getValue" >
     <UML:Parameter visibility="private" xmi.id="2049" value="" type="const int unsigned &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2050" type="virtual const LaVectorDouble" isAbstract="true" name="getValues" >
     <UML:Parameter visibility="private" xmi.id="2051" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2052" type="bool" name="isComposite" />
    <UML:Operation visibility="public" xmi.id="2053" type="virtual bool" isAbstract="true" name="read" >
     <UML:Parameter visibility="private" xmi.id="2054" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2055" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2056" type="virtual void" isAbstract="true" name="setValue" >
     <UML:Parameter visibility="private" xmi.id="2057" value="" type="const int unsigned &amp;" />
     <UML:Parameter visibility="private" xmi.id="2058" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2059" type="virtual void" isAbstract="true" name="setValues" >
     <UML:Parameter visibility="private" xmi.id="2060" value="" type="const std :: vector &lt; double > &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2061" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2062" type="virtual unsigned int" isAbstract="true" name="size" >
     <UML:Parameter visibility="private" xmi.id="2063" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2064" type="virtual std :: string" isAbstract="true" name="toString" />
    <UML:Operation visibility="public" xmi.id="2065" type="virtual bool" isAbstract="true" name="write" >
     <UML:Parameter visibility="private" xmi.id="2066" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2067" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2068" type="virtual " name="~SiconosVector" />
    <UML:Attribute visibility="protected" xmi.id="2026" value="" type="bool" name="composite" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2069" name="SimpleVector" >
    <UML:Operation visibility="public" xmi.id="2071" type="bool" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2072" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2073" type="bool" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2074" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2075" type="double &amp;" name="()" >
     <UML:Parameter visibility="private" xmi.id="2076" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2077" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2078" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2079" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2080" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2081" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2082" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2083" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2084" value="" type="const SiconosVector &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2085" value="" type="const SiconosMatrix &amp;" name="m" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2086" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2087" value="" type="const SimpleVector &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2088" value="" type="const SiconosMatrix &amp;" name="m" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2089" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2090" value="" type="const SimpleVector &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2091" value="" type="const double &amp;" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2092" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2093" value="" type="const double &amp;" name="d" />
     <UML:Parameter visibility="private" xmi.id="2094" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2095" type="SimpleVector &amp;" name="*=" >
     <UML:Parameter visibility="private" xmi.id="2096" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2097" type="SimpleVector" name="+" >
     <UML:Parameter visibility="private" xmi.id="2098" value="" type="const SiconosVector &amp;" name="v1" />
     <UML:Parameter visibility="private" xmi.id="2099" value="" type="const SiconosVector &amp;" name="v2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2100" type="SimpleVector &amp;" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2101" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2102" type="SimpleVector &amp;" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2103" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2104" type="SimpleVector" name="-" >
     <UML:Parameter visibility="private" xmi.id="2105" value="" type="const SiconosVector &amp;" name="v1" />
     <UML:Parameter visibility="private" xmi.id="2106" value="" type="const SiconosVector &amp;" name="v2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2107" type="SimpleVector &amp;" name="-=" >
     <UML:Parameter visibility="private" xmi.id="2108" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2109" type="SimpleVector &amp;" name="-=" >
     <UML:Parameter visibility="private" xmi.id="2110" value="" type="const SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2111" type="SimpleVector" name="/" >
     <UML:Parameter visibility="private" xmi.id="2112" value="" type="const SimpleVector &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2113" value="" type="const double &amp;" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2114" type="SimpleVector &amp;" name="/=" >
     <UML:Parameter visibility="private" xmi.id="2115" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2116" type="SimpleVector &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2117" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2118" type="SimpleVector &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2119" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2120" type="bool" name="==" >
     <UML:Parameter visibility="private" xmi.id="2121" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2122" type="bool" name="==" >
     <UML:Parameter visibility="private" xmi.id="2123" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2124" type="" name="SimpleVector" />
    <UML:Operation visibility="public" xmi.id="2125" type="" name="SimpleVector" >
     <UML:Parameter visibility="private" xmi.id="2126" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2127" type="" name="SimpleVector" >
     <UML:Parameter visibility="private" xmi.id="2128" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2129" type="" name="SimpleVector" >
     <UML:Parameter visibility="private" xmi.id="2130" value="" type="const int unsigned &amp;" name="size" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2131" type="" name="SimpleVector" >
     <UML:Parameter visibility="private" xmi.id="2132" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2133" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2134" type="" name="SimpleVector" >
     <UML:Parameter visibility="private" xmi.id="2135" value="" type="const std :: vector &lt; double > &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2136" type="void" name="add" >
     <UML:Parameter visibility="private" xmi.id="2137" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2138" type="void" name="addPtr" >
     <UML:Parameter visibility="private" xmi.id="2139" value="" type="SiconosVector *" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2140" type="SimpleVector" name="addition" >
     <UML:Parameter visibility="private" xmi.id="2141" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2142" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="2143" type="double *" name="getArray" />
    <UML:Operation visibility="public" xmi.id="2144" type="void" name="getBlock" >
     <UML:Parameter visibility="private" xmi.id="2145" value="" type="const std :: vector &lt; unsigned int > &amp;" />
     <UML:Parameter visibility="private" xmi.id="2146" value="" type="SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2147" type="const double" name="getValue" >
     <UML:Parameter visibility="private" xmi.id="2148" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2149" type="const LaVectorDouble" name="getValues" >
     <UML:Parameter visibility="private" xmi.id="2150" value="" type="const int unsigned &amp;" name="i" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2151" type="SimpleVector" name="matTransVecMult" >
     <UML:Parameter visibility="private" xmi.id="2152" value="" type="SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="2153" value="" type="SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2154" type="SimpleVector" name="matTransVecMult" >
     <UML:Parameter visibility="private" xmi.id="2155" value="" type="SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="2156" value="" type="SimpleVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2157" type="double" name="norm" />
    <UML:Operation visibility="public" xmi.id="2158" type="bool" name="read" >
     <UML:Parameter visibility="private" xmi.id="2159" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2160" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2161" type="void" name="setValue" >
     <UML:Parameter visibility="private" xmi.id="2162" value="" type="const int unsigned &amp;" />
     <UML:Parameter visibility="private" xmi.id="2163" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2164" type="void" name="setValues" >
     <UML:Parameter visibility="private" xmi.id="2165" value="" type="const std :: vector &lt; double > &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2166" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2167" type="unsigned int" name="size" >
     <UML:Parameter visibility="private" xmi.id="2168" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2169" type="SimpleVector" name="subtraction" >
     <UML:Parameter visibility="private" xmi.id="2170" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2171" type="bool" name="write" >
     <UML:Parameter visibility="private" xmi.id="2172" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2173" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2174" type="void" name="zero" />
    <UML:Operation visibility="public" xmi.id="2175" type="" name="~SimpleVector" />
    <UML:Attribute visibility="private" xmi.id="2070" value="" type="LaVectorDouble" name="lavd" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2176" name="CompositeVector" >
    <UML:Operation visibility="public" xmi.id="2177" type="bool" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2178" value="" type="const CompositeVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2179" type="bool" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2180" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2181" type="double &amp;" name="()" >
     <UML:Parameter visibility="private" xmi.id="2182" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2183" type="CompositeVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2184" value="" type="const CompositeVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="2185" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2186" type="SimpleVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2187" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2188" value="" type="const CompositeVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2189" type="CompositeVector" name="*" >
     <UML:Parameter visibility="private" xmi.id="2190" value="" type="const double &amp;" />
     <UML:Parameter visibility="private" xmi.id="2191" value="" type="const CompositeVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2192" type="CompositeVector &amp;" name="*=" >
     <UML:Parameter visibility="private" xmi.id="2193" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2194" type="CompositeVector" name="+" >
     <UML:Parameter visibility="private" xmi.id="2195" value="" type="const CompositeVector &amp;" name="v1" />
     <UML:Parameter visibility="private" xmi.id="2196" value="" type="const CompositeVector &amp;" name="v2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2197" type="CompositeVector &amp;" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2198" value="" type="const CompositeVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2199" type="CompositeVector &amp;" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2200" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2201" type="CompositeVector" name="-" >
     <UML:Parameter visibility="private" xmi.id="2202" value="" type="const CompositeVector &amp;" name="v1" />
     <UML:Parameter visibility="private" xmi.id="2203" value="" type="const CompositeVector &amp;" name="v2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2204" type="CompositeVector &amp;" name="-=" >
     <UML:Parameter visibility="private" xmi.id="2205" value="" type="const CompositeVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2206" type="CompositeVector &amp;" name="-=" >
     <UML:Parameter visibility="private" xmi.id="2207" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2208" type="CompositeVector" name="/" >
     <UML:Parameter visibility="private" xmi.id="2209" value="" type="const CompositeVector &amp;" />
     <UML:Parameter visibility="private" xmi.id="2210" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2211" type="CompositeVector &amp;" name="/=" >
     <UML:Parameter visibility="private" xmi.id="2212" value="" type="const double &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2213" type="CompositeVector &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2214" value="" type="const CompositeVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2215" type="CompositeVector &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2216" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2217" type="bool" name="==" >
     <UML:Parameter visibility="private" xmi.id="2218" value="" type="const CompositeVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2219" type="bool" name="==" >
     <UML:Parameter visibility="private" xmi.id="2220" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2221" type="" name="CompositeVector" />
    <UML:Operation visibility="public" xmi.id="2222" type="" name="CompositeVector" >
     <UML:Parameter visibility="private" xmi.id="2223" value="" type="const CompositeVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2224" type="" name="CompositeVector" >
     <UML:Parameter visibility="private" xmi.id="2225" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2226" type="" name="CompositeVector" >
     <UML:Parameter visibility="private" xmi.id="2227" value="" type="const SimpleVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2228" type="" name="CompositeVector" >
     <UML:Parameter visibility="private" xmi.id="2229" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2230" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2231" type="void" name="add" >
     <UML:Parameter visibility="private" xmi.id="2232" value="" type="const SiconosVector &amp;" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2233" type="void" name="addPtr" >
     <UML:Parameter visibility="private" xmi.id="2234" value="" type="SiconosVector *" name="v" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2235" type="CompositeVector" name="addition" >
     <UML:Parameter visibility="private" xmi.id="2236" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2237" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="2238" type="double *" name="getArray" />
    <UML:Operation visibility="public" xmi.id="2239" type="const double" name="getValue" >
     <UML:Parameter visibility="private" xmi.id="2240" value="" type="const int unsigned &amp;" name="index" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2241" type="const LaVectorDouble" name="getValues" >
     <UML:Parameter visibility="private" xmi.id="2242" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2243" type="SimpleVector" name="matTransVecMult" >
     <UML:Parameter visibility="private" xmi.id="2244" value="" type="SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="2245" value="" type="CompositeVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2246" type="bool" name="read" >
     <UML:Parameter visibility="private" xmi.id="2247" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2248" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2249" type="void" name="setValue" >
     <UML:Parameter visibility="private" xmi.id="2250" value="" type="const int unsigned &amp;" name="i" />
     <UML:Parameter visibility="private" xmi.id="2251" value="" type="const double &amp;" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2252" type="void" name="setValues" >
     <UML:Parameter visibility="private" xmi.id="2253" value="" type="const std :: vector &lt; double > &amp;" name="v" />
     <UML:Parameter visibility="private" xmi.id="2254" value="" type="const int unsigned &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2255" type="unsigned int" name="size" >
     <UML:Parameter visibility="private" xmi.id="2256" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2257" type="CompositeVector" name="subtraction" >
     <UML:Parameter visibility="private" xmi.id="2258" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2259" type="bool" name="write" >
     <UML:Parameter visibility="private" xmi.id="2260" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2261" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2262" type="" name="~CompositeVector" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2263" name="SiconosMatrix" >
    <UML:Operation visibility="public" xmi.id="2268" type="bool" name="!=" >
     <UML:Parameter visibility="private" xmi.id="2269" value="" type="const SiconosMatrix &amp;" name="m1" />
     <UML:Parameter visibility="private" xmi.id="2270" value="" type="const SiconosMatrix &amp;" name="m2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2271" type="double &amp;" name="()" >
     <UML:Parameter visibility="private" xmi.id="2272" value="" type="const int &amp;" name="row" />
     <UML:Parameter visibility="private" xmi.id="2273" value="" type="const int &amp;" name="col" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2274" type="double &amp;" name="()" >
     <UML:Parameter visibility="private" xmi.id="2275" value="" type="const unsigned int &amp;" name="row" />
     <UML:Parameter visibility="private" xmi.id="2276" value="" type="const unsigned int &amp;" name="col" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2277" type="SiconosMatrix" name="*" >
     <UML:Parameter visibility="private" xmi.id="2278" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2279" value="" type="const double &amp;" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2280" type="SiconosMatrix" name="*" >
     <UML:Parameter visibility="private" xmi.id="2281" value="" type="const SiconosMatrix &amp;" name="m1" />
     <UML:Parameter visibility="private" xmi.id="2282" value="" type="const SiconosMatrix &amp;" name="m2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2283" type="SiconosMatrix" name="*" >
     <UML:Parameter visibility="private" xmi.id="2284" value="" type="const double" name="d" />
     <UML:Parameter visibility="private" xmi.id="2285" value="" type="const SiconosMatrix &amp;" name="m" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2286" type="SiconosMatrix" name="+" >
     <UML:Parameter visibility="private" xmi.id="2287" value="" type="const SiconosMatrix &amp;" name="m1" />
     <UML:Parameter visibility="private" xmi.id="2288" value="" type="const SiconosMatrix &amp;" name="m2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2289" type="SiconosMatrix &amp;" name="+=" >
     <UML:Parameter visibility="private" xmi.id="2290" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2291" type="SiconosMatrix" name="-" >
     <UML:Parameter visibility="private" xmi.id="2292" value="" type="const SiconosMatrix &amp;" name="m1" />
     <UML:Parameter visibility="private" xmi.id="2293" value="" type="const SiconosMatrix &amp;" name="m2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2294" type="SiconosMatrix" name="/" >
     <UML:Parameter visibility="private" xmi.id="2295" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2296" value="" type="const double" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2297" type="SiconosMatrix &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2298" value="" type="const SiconosMatrix &amp;" name="m" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2299" type="bool" name="==" >
     <UML:Parameter visibility="private" xmi.id="2300" value="" type="const SiconosMatrix &amp;" name="m1" />
     <UML:Parameter visibility="private" xmi.id="2301" value="" type="const SiconosMatrix &amp;" name="m2" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2302" type="SiconosMatrix" name="BlockMatrixAssemble" >
     <UML:Parameter visibility="private" xmi.id="2303" value="" type="std :: vector &lt; SiconosMatrix * >" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2304" type="SiconosMatrix" name="PLUFactorization" />
    <UML:Operation visibility="public" xmi.id="2305" type="void" name="PLUFactorizationInPlace" />
    <UML:Operation visibility="public" xmi.id="2306" type="SiconosMatrix" name="PLUForwardBackward" >
     <UML:Parameter visibility="private" xmi.id="2307" value="" type="SiconosMatrix &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2308" type="SimpleVector" name="PLUForwardBackward" >
     <UML:Parameter visibility="private" xmi.id="2309" value="" type="SiconosVector &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2310" type="void" name="PLUForwardBackwardInPlace" >
     <UML:Parameter visibility="private" xmi.id="2311" value="" type="SiconosMatrix &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2312" type="void" name="PLUForwardBackwardInPlace" >
     <UML:Parameter visibility="private" xmi.id="2313" value="" type="SiconosVector &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2314" type="SiconosMatrix" name="PLUInverse" />
    <UML:Operation visibility="public" xmi.id="2315" type="void" name="PLUInverseInPlace" />
    <UML:Operation visibility="public" xmi.id="2316" type="" name="SiconosMatrix" />
    <UML:Operation visibility="public" xmi.id="2317" type="" name="SiconosMatrix" >
     <UML:Parameter visibility="private" xmi.id="2318" value="" type="const LaGenMatDouble &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2319" type="" name="SiconosMatrix" >
     <UML:Parameter visibility="private" xmi.id="2320" value="" type="const LaVectorDouble &amp;" />
     <UML:Parameter visibility="private" xmi.id="2321" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2322" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2323" type="" name="SiconosMatrix" >
     <UML:Parameter visibility="private" xmi.id="2324" value="" type="const SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2325" type="" name="SiconosMatrix" >
     <UML:Parameter visibility="private" xmi.id="2326" value="" type="const int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2327" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2328" type="" name="SiconosMatrix" >
     <UML:Parameter visibility="private" xmi.id="2329" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2330" value="" type="const bool &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2331" type="SiconosMatrix" name="^" >
     <UML:Parameter visibility="private" xmi.id="2332" value="" type="const SiconosMatrix &amp;" name="m" />
     <UML:Parameter visibility="private" xmi.id="2333" value="" type="const int" name="pow" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2334" type="bool" name="addRow" >
     <UML:Parameter visibility="private" xmi.id="2335" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2336" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2337" type="void" name="blockMatrixCopy" >
     <UML:Parameter visibility="private" xmi.id="2338" value="" type="SiconosMatrix &amp;" />
     <UML:Parameter visibility="private" xmi.id="2339" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2340" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2341" type="void" name="display" />
    <UML:Operation visibility="public" xmi.id="2342" type="void" name="eye" />
    <UML:Operation visibility="public" xmi.id="2343" type="double *" name="getArray" />
    <UML:Operation visibility="public" xmi.id="2344" type="void" name="getBlock" >
     <UML:Parameter visibility="private" xmi.id="2345" value="" type="const std :: vector &lt; unsigned int > &amp;" />
     <UML:Parameter visibility="private" xmi.id="2346" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2347" type="void" name="getBlock" >
     <UML:Parameter visibility="private" xmi.id="2348" value="" type="const std :: vector &lt; unsigned int > &amp;" />
     <UML:Parameter visibility="private" xmi.id="2349" value="" type="const std :: vector &lt; unsigned int > &amp;" />
     <UML:Parameter visibility="private" xmi.id="2350" value="" type="SiconosMatrix &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2351" type="SimpleVector" name="getCol" >
     <UML:Parameter visibility="private" xmi.id="2352" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2353" type="LaGenMatDouble &amp;" name="getLaGenMatDouble" />
    <UML:Operation visibility="public" xmi.id="2354" type="SimpleVector" name="getRow" >
     <UML:Parameter visibility="private" xmi.id="2355" value="" type="const int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2356" type="const double" name="getValue" >
     <UML:Parameter visibility="private" xmi.id="2357" value="" type="const int &amp;" name="row" />
     <UML:Parameter visibility="private" xmi.id="2358" value="" type="const int &amp;" name="col" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2359" type="bool" name="isFactorised" />
    <UML:Operation visibility="public" xmi.id="2360" type="bool" name="isInversed" />
    <UML:Operation visibility="public" xmi.id="2361" type="bool" name="isSquare" />
    <UML:Operation visibility="public" xmi.id="2362" type="SiconosMatrix" name="linearSolve" >
     <UML:Parameter visibility="private" xmi.id="2363" value="" type="const SiconosMatrix &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2364" type="SiconosMatrix" name="multTranspose" >
     <UML:Parameter visibility="private" xmi.id="2365" value="" type="SiconosMatrix &amp;" name="B" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2366" type="bool" name="rawWrite" >
     <UML:Parameter visibility="private" xmi.id="2367" value="" type="const std :: string &amp;" name="fileName" />
     <UML:Parameter visibility="private" xmi.id="2368" value="" type="const std :: string &amp;" name="mode" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2369" type="bool" name="read" >
     <UML:Parameter visibility="private" xmi.id="2370" value="" type="const std :: string &amp;" />
     <UML:Parameter visibility="private" xmi.id="2371" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2372" type="void" name="setRow" >
     <UML:Parameter visibility="private" xmi.id="2373" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2374" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2375" type="void" name="setValue" >
     <UML:Parameter visibility="private" xmi.id="2376" value="" type="const LaGenMatDouble &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2377" type="void" name="setValue" >
     <UML:Parameter visibility="private" xmi.id="2378" value="" type="const int &amp;" name="row" />
     <UML:Parameter visibility="private" xmi.id="2379" value="" type="const int &amp;" name="col" />
     <UML:Parameter visibility="private" xmi.id="2380" value="" type="const double &amp;" name="d" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2381" type="unsigned int" name="size" >
     <UML:Parameter visibility="private" xmi.id="2382" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="protected" xmi.id="2383" type="void" name="verbose" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2384" value="" type="const std :: string &amp;" name="msg" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2385" type="bool" name="write" >
     <UML:Parameter visibility="private" xmi.id="2386" value="" type="const std :: string &amp;" name="fileName" />
     <UML:Parameter visibility="private" xmi.id="2387" value="" type="const std :: string &amp;" name="mode" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2388" type="void" name="zero" />
    <UML:Operation visibility="public" xmi.id="2389" type="" name="~SiconosMatrix" />
    <UML:Attribute visibility="private" xmi.id="2264" value="" type="LaVectorLongInt *" name="ipiv" />
    <UML:Attribute visibility="private" xmi.id="2265" value="" type="bool" name="isPLUFactorized" />
    <UML:Attribute visibility="private" xmi.id="2266" value="" type="bool" name="isPLUInversed" />
    <UML:Attribute visibility="private" xmi.id="2267" value="" type="LaGenMatDouble" name="mat" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2396" name="SiconosMatrixException" >
    <UML:Operation comment="\fn SiconosMatrixException()
\brief constructor" visibility="public" xmi.id="2397" type="" name="SiconosMatrixException" />
    <UML:Operation comment="\fn SiconosMatrixException(const std::string&amp; report)
\brief constructor with a report
\param std::string report : exception description" visibility="public" xmi.id="2398" type="" name="SiconosMatrixException" >
     <UML:Parameter visibility="private" xmi.id="2399" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn static void selfThrow()
\brief static function which throw a SiconosMatrixException 
\exception SiconosMatrixException" visibility="public" xmi.id="2400" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation comment="\fn static void selfThrow(const std::string&amp; report)
\brief static function which throw a SiconosMatrixException with a report
\param std::string report : exception description
\exception SiconosMatrixException" visibility="public" xmi.id="2401" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2402" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn ~SiconosMatrixException()
\brief destructor" visibility="public" xmi.id="2403" type="" name="~SiconosMatrixException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2404" name="SiconosVectorException" >
    <UML:Operation comment="\fn SiconosVectorException()
\brief constructor" visibility="public" xmi.id="2405" type="" name="SiconosVectorException" />
    <UML:Operation comment="\fn SiconosVectorException(const std::string&amp; report)
\brief constructor with a report
\param std::string report : exception description" visibility="public" xmi.id="2406" type="" name="SiconosVectorException" >
     <UML:Parameter visibility="private" xmi.id="2407" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn static void selfThrow()
\brief static function which throw a SiconosVectorException 
\exception SiconosVectorException" visibility="public" xmi.id="2408" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation comment="\fn static void selfThrow(const std::string&amp; report)
\brief static function which throw a SiconosVectorException with a report
\param std::string report : exception description
\exception SiconosVectorException" visibility="public" xmi.id="2409" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2410" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn ~SiconosVectorException()
\brief destructor" visibility="public" xmi.id="2411" type="" name="~SiconosVectorException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2412" name="XMLException" >
    <UML:Operation comment="\fn XMLException()
\brief constructor" visibility="public" xmi.id="2413" type="" name="XMLException" />
    <UML:Operation comment="\fn XMLException(const std::string&amp; report)
\brief constructor with a report
\param std::string report : exception description" visibility="public" xmi.id="2414" type="" name="XMLException" >
     <UML:Parameter visibility="private" xmi.id="2415" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn static void selfThrow()
\brief static function which throw a XMLException 
\exception XMLException" visibility="public" xmi.id="2416" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation comment="\fn static void selfThrow(const std::string&amp; report)
\brief static function which throw a XMLException with a report
\param std::string report : exception description
\exception XMLException" visibility="public" xmi.id="2417" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2418" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn ~XMLException()
\brief destructor" visibility="public" xmi.id="2419" type="" name="~XMLException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2420" name="RuntimeException" >
    <UML:Operation comment="\fn RuntimeException()
\brief constructor" visibility="public" xmi.id="2421" type="" name="RuntimeException" />
    <UML:Operation comment="\fn RuntimeException(const string&amp; report)
\brief constructor with a report
\param string report : exception description" visibility="public" xmi.id="2422" type="" name="RuntimeException" >
     <UML:Parameter visibility="private" xmi.id="2423" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn static void selfThrow()
\brief static function which throw a RuntimeException 
\exception RuntimeException" visibility="public" xmi.id="2424" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation comment="\fn static void selfThrow(string report)
\brief static function which throw a RuntimeException with a report
\param string report : exception description
\exception RuntimeException" visibility="public" xmi.id="2425" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2426" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="\fn ~RuntimeException()
\brief destructor" visibility="public" xmi.id="2427" type="" name="~RuntimeException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2428" name="SiconosException" >
    <UML:Operation comment="\fn SiconosException()
\brief constructor" visibility="public" xmi.id="2429" type="" name="SiconosException" />
    <UML:Operation comment="\fn SiconosException(const string&amp;)
\brief constructor with a report
\param string report : exception description" visibility="public" xmi.id="2430" type="" name="SiconosException" >
     <UML:Parameter visibility="private" xmi.id="2431" value="" type="const std :: string &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn ~SiconosException()
\brief destructor" visibility="public" xmi.id="2432" type="virtual " name="~SiconosException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2441" name="SiconosMemory" >
    <UML:Operation visibility="public" xmi.id="2445" type="SiconosMemory &amp;" name="=" >
     <UML:Parameter visibility="private" xmi.id="2446" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn SiconosMemory()
\brief default constructor." visibility="protected" xmi.id="2447" type="" name="SiconosMemory" />
    <UML:Operation comment="\fn SiconosMemory(SiconosMemoryXML *, const unsigned int&amp;=0)
\brief xml constructor + (optional) size of memory; if not set, size is read in xml file.
\param SiconosMemoryXML * : the XML object which contains the data of the memory
\param unsigned int : the size of the memory (OPTIONAL)" visibility="public" xmi.id="2448" type="" name="SiconosMemory" >
     <UML:Parameter visibility="private" xmi.id="2449" value="" type="SiconosMemoryXML *" />
     <UML:Parameter visibility="private" xmi.id="2450" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn SiconosMemory(SiconosMemory&amp;)
\brief constructor by copy" visibility="public" xmi.id="2451" type="" name="SiconosMemory" >
     <UML:Parameter visibility="private" xmi.id="2452" value="" type="const SiconosMemory &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn SiconosMemory(deque&lt;SiconosVector*>)
\brief constructor with deque parameter.
\param deque&lt;SiconosVector*> : the deque of siconosVector which must be stored
memorySize is set to the size of the deque given in parameters" visibility="public" xmi.id="2453" type="" name="SiconosMemory" >
     <UML:Parameter visibility="private" xmi.id="2454" value="" type="const std :: deque &lt; SiconosVector * > &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn SiconosMemory(int)
\brief constructor with size parameter.
\param int : the size of the memory
memorySize is set with the parameter, and the memory is allocated for this number of SiconosVector" visibility="public" xmi.id="2455" type="" name="SiconosMemory" >
     <UML:Parameter visibility="private" xmi.id="2456" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn SiconosMemory(int, deque&lt;SiconosVector*>)
\brief constructor with size and deque parameter.
\param int : the size of the memory	
\param deque&lt;SiconosVector*> : the deque of siconosVector which must be stored
this constructor is useful if the deque given in parameters has a size lower than the normal size of the memory" visibility="public" xmi.id="2457" type="" name="SiconosMemory" >
     <UML:Parameter visibility="private" xmi.id="2458" value="" type="const unsigned int &amp;" />
     <UML:Parameter visibility="private" xmi.id="2459" value="" type="const std :: deque &lt; SiconosVector * > &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn void swap(SiconosVector*)
\brief displays the data of the memory object" visibility="public" xmi.id="2460" type="void" name="display" />
    <UML:Operation comment="\fn int getMemorySize()
\brief gives the size of the memory
\return int >= 0" visibility="public" xmi.id="2461" type="const unsigned int" name="getMemorySize" />
    <UML:Operation comment="\fn int getNbVectorsInMemory()
\brief gives the numbers of SiconosVectors currently stored in the memory
\return int >= 0" visibility="public" xmi.id="2462" type="const unsigned int" name="getNbVectorsInMemory" />
    <UML:Operation visibility="public" xmi.id="2463" type="SiconosMemoryXML *" name="getSiconosMemoryXML" />
    <UML:Operation comment="\fn SiconosVector* getSiconosVector(int)
\brief gives a SiconosVectors of the memory
\param int the position in the memory of the wanted SiconosVector
\return SiconosVector* if the parameter has its value in [0, nbVectorsInMemory[" visibility="public" xmi.id="2464" type="SiconosVector *" name="getSiconosVector" >
     <UML:Parameter visibility="private" xmi.id="2465" value="" type="const unsigned int &amp;" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2466" type="void" name="saveMemorySizeToXML" />
    <UML:Operation comment="\fn void setSiconosMemorySize( int max )
\brief set the max size of the SiconosMemory
\param int : the max size for this SiconosMemory" visibility="public" xmi.id="2467" type="void" name="setSiconosMemorySize" >
     <UML:Parameter visibility="private" xmi.id="2468" value="" type="const unsigned int &amp;" name="max" />
    </UML:Operation>
    <UML:Operation comment="\fn void setVectorMemory(vector&lt;SiconosVector*>)
\brief fill the memory with a vector of siconosVector
\param deque&lt;SiconosVector*>
memorySize is set to the size of the deque given in parameters" visibility="public" xmi.id="2469" type="void" name="setVectorMemory" >
     <UML:Parameter visibility="private" xmi.id="2470" value="" type="const std :: deque &lt; SiconosVector * > &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn void swap(const SiconosVector&amp;)
\brief puts a SiconosVector in the memory
\param SiconosVector* : the SiconosVector we want to put in memory
this function moves older SiconosVectors of vectorMemory of one position (this operation handles only pointers)
and COPIES (the values of) the SiconosVector given in parameter in the position 0 of vectorMemory" visibility="public" xmi.id="2471" type="void" name="swap" >
     <UML:Parameter visibility="private" xmi.id="2472" value="" type="const SiconosVector &amp;" />
    </UML:Operation>
    <UML:Operation comment="\fn ~SiconosMemory()
\brief destructor
delete the SiconosVectors allocated in vectorMemory if memorySize > 0" visibility="public" xmi.id="2473" type="" name="~SiconosMemory" />
    <UML:Attribute visibility="private" xmi.id="2442" value="" type="unsigned int" name="memorySize" />
    <UML:Attribute visibility="private" xmi.id="2443" value="" type="SiconosMemoryXML *" name="memoryXML" />
    <UML:Attribute visibility="private" xmi.id="2444" value="" type="unsigned int" name="nbVectorsInMemory" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2474" name="SiconosMemoryException" >
    <UML:Operation comment="constructor" visibility="public" xmi.id="2475" type="" name="SiconosMemoryException" />
    <UML:Operation comment="constructor
@param std::string which describe the exception" visibility="public" xmi.id="2476" type="" name="SiconosMemoryException" >
     <UML:Parameter visibility="private" xmi.id="2477" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2478" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation visibility="public" xmi.id="2479" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2480" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="destructor" visibility="public" xmi.id="2481" type="" name="~SiconosMemoryException" />
   </UML:Class>
   <UML:Class stereotype="class" visibility="public" xmi.id="2488" name="SiconosSharedLibraryException" >
    <UML:Operation comment="constructor" visibility="public" xmi.id="2489" type="" name="SiconosSharedLibraryException" />
    <UML:Operation comment="constructor
@param string which describe the exception" visibility="public" xmi.id="2490" type="" name="SiconosSharedLibraryException" >
     <UML:Parameter visibility="private" xmi.id="2491" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation visibility="public" xmi.id="2492" type="void" name="selfThrow" ownerScope="classifier" />
    <UML:Operation visibility="public" xmi.id="2493" type="void" name="selfThrow" ownerScope="classifier" >
     <UML:Parameter visibility="private" xmi.id="2494" value="" type="const std :: string &amp;" name="report" />
    </UML:Operation>
    <UML:Operation comment="destructor" visibility="public" xmi.id="2495" type="" name="~SiconosSharedLibraryException" />
   </UML:Class>
   <UML:Generalization child="2069" visibility="public" xmi.id="2390" parent="2025" />
   <UML:Generalization child="2176" visibility="public" xmi.id="2391" parent="2025" />
   <UML:Association visibility="public" xmi.id="2392" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="2176" />
     <UML:AssociationEndRole visibility="public" type="2069" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="2412" visibility="public" xmi.id="2433" parent="2428" />
   <UML:Generalization child="2420" visibility="public" xmi.id="2434" parent="2428" />
   <UML:Generalization child="2396" visibility="public" xmi.id="2436" parent="2428" />
   <UML:Generalization child="2404" visibility="public" xmi.id="2437" parent="2428" />
   <UML:Generalization child="2474" visibility="public" xmi.id="2482" parent="2428" />
   <UML:Generalization child="2488" visibility="public" xmi.id="2496" parent="2428" />
  </UML:Model>
  <diagrams>
   <diagram snapgrid="0" showattsig="0" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="1011" snapy="10" showatts="0" xmi.id="2016" documentation="" type="402" showops="0" showpackage="0" name="class diagram" localid="30000" showstereotype="0" showscope="0" snapcsgrid="0" font="Sans,10,-1,5,50,0,0,0,0,0" linecolor="#2f0dd5" canvasheight="836" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="100" showattsigs="603" usesdiagramusefillcolour="1" x="146" linecolour="none" y="76" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2025" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="98" showattsigs="603" usesdiagramusefillcolour="1" x="329" linecolour="none" y="99" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2263" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="93" showattsigs="603" usesdiagramusefillcolour="1" x="69" linecolour="none" y="167" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2069" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="117" showattsigs="603" usesdiagramusefillcolour="1" x="218" linecolour="none" y="167" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2176" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="34" usesdiagramusefillcolour="1" x="163" linecolour="none" y="160" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2393" text="(1,n)" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="159" showattsigs="603" usesdiagramusefillcolour="1" x="249" linecolour="none" y="352" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2396" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="161" showattsigs="603" usesdiagramusefillcolour="1" x="420" linecolour="none" y="352" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2404" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="122" showattsigs="603" usesdiagramusefillcolour="1" x="62" linecolour="none" y="282" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2420" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="121" showattsigs="603" usesdiagramusefillcolour="1" x="331" linecolour="none" y="282" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2428" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="99" showattsigs="603" usesdiagramusefillcolour="1" x="140" linecolour="none" y="352" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2412" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="413" usesdiagramusefillcolour="1" x="48" linecolour="none" y="37" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="173" usefillcolor="1" isinstance="0" xmi.id="2438" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="762" usesdiagramusefillcolour="1" x="41" linecolour="none" y="234" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="181" usefillcolor="1" isinstance="0" xmi.id="2439" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="111" showattsigs="603" usesdiagramusefillcolour="1" x="547" linecolour="none" y="107" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2441" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="171" showattsigs="603" usesdiagramusefillcolour="1" x="590" linecolour="none" y="352" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2474" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="149" usesdiagramusefillcolour="1" x="528" linecolour="none" y="73" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="83" usefillcolor="1" isinstance="0" xmi.id="2483" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="134" usesdiagramusefillcolour="1" x="198" linecolour="none" y="43" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2484" text="SICONOS ALGEBRA" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="131" usesdiagramusefillcolour="1" x="536" linecolour="none" y="79" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2485" text="SICONOS MEMORY" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="148" usesdiagramusefillcolour="1" x="317" linecolour="none" y="240" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="21" usefillcolor="1" pretext="" isinstance="0" xmi.id="2486" text="SICONOS EXCEPTION" font="Sans,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="209" showattsigs="603" usesdiagramusefillcolour="1" x="537" linecolour="none" y="282" showopsigs="603" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="27" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="2488" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="2025" widgetaid="2069" xmi.id="2390" >
      <linepath>
       <startpoint startx="115" starty="167" />
       <endpoint endx="179" endy="103" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="2025" widgetaid="2176" xmi.id="2391" >
      <linepath>
       <startpoint startx="276" starty="167" />
       <endpoint endx="212" endy="103" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2069" widgetaid="2176" xmi.id="2392" >
      <linepath>
       <startpoint startx="218" starty="180" />
       <endpoint endx="162" endy="180" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="2428" widgetaid="2420" xmi.id="2434" >
      <linepath>
       <startpoint startx="184" starty="295" />
       <endpoint endx="331" endy="295" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="1" widgetbid="2428" widgetaid="2412" xmi.id="2433" >
      <linepath>
       <startpoint startx="189" starty="352" />
       <endpoint endx="355" endy="309" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="2" widgetbid="2428" widgetaid="2396" xmi.id="2436" >
      <linepath>
       <startpoint startx="328" starty="352" />
       <endpoint endx="379" endy="309" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="3" widgetbid="2428" widgetaid="2404" xmi.id="2437" >
      <linepath>
       <startpoint startx="500" starty="352" />
       <endpoint endx="403" endy="309" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="5" indexb="4" widgetbid="2428" widgetaid="2474" xmi.id="2482" >
      <linepath>
       <startpoint startx="675" starty="352" />
       <endpoint endx="427" endy="309" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="2428" widgetaid="2488" roleBdoc="" roleAdoc="" type="500" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="537" starty="295" />
       <endpoint endx="452" endy="295" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="2016" label="class diagram" />
     <listitem open="0" type="813" id="2176" label="CompositeVector" >
      <listitem open="0" type="815" id="2179" label="!=" />
      <listitem open="0" type="815" id="2177" label="!=" />
      <listitem open="0" type="815" id="2181" label="()" />
      <listitem open="0" type="815" id="2186" label="*" />
      <listitem open="0" type="815" id="2189" label="*" />
      <listitem open="0" type="815" id="2183" label="*" />
      <listitem open="0" type="815" id="2192" label="*=" />
      <listitem open="0" type="815" id="2194" label="+" />
      <listitem open="0" type="815" id="2199" label="+=" />
      <listitem open="0" type="815" id="2197" label="+=" />
      <listitem open="0" type="815" id="2201" label="-" />
      <listitem open="0" type="815" id="2206" label="-=" />
      <listitem open="0" type="815" id="2204" label="-=" />
      <listitem open="0" type="815" id="2208" label="/" />
      <listitem open="0" type="815" id="2211" label="/=" />
      <listitem open="0" type="815" id="2213" label="=" />
      <listitem open="0" type="815" id="2215" label="=" />
      <listitem open="0" type="815" id="2219" label="==" />
      <listitem open="0" type="815" id="2217" label="==" />
      <listitem open="0" type="815" id="2224" label="CompositeVector" />
      <listitem open="0" type="815" id="2221" label="CompositeVector" />
      <listitem open="0" type="815" id="2222" label="CompositeVector" />
      <listitem open="0" type="815" id="2228" label="CompositeVector" />
      <listitem open="0" type="815" id="2226" label="CompositeVector" />
      <listitem open="0" type="815" id="2231" label="add" />
      <listitem open="0" type="815" id="2233" label="addPtr" />
      <listitem open="0" type="815" id="2235" label="addition" />
      <listitem open="0" type="815" id="2237" label="display" />
      <listitem open="0" type="815" id="2238" label="getArray" />
      <listitem open="0" type="815" id="2239" label="getValue" />
      <listitem open="0" type="815" id="2241" label="getValues" />
      <listitem open="0" type="815" id="2243" label="matTransVecMult" />
      <listitem open="0" type="815" id="2246" label="read" />
      <listitem open="0" type="815" id="2249" label="setValue" />
      <listitem open="0" type="815" id="2252" label="setValues" />
      <listitem open="0" type="815" id="2255" label="size" />
      <listitem open="0" type="815" id="2257" label="subtraction" />
      <listitem open="0" type="815" id="2259" label="write" />
      <listitem open="0" type="815" id="2262" label="~CompositeVector" />
     </listitem>
     <listitem open="0" type="813" id="2420" label="RuntimeException" >
      <listitem open="0" type="815" id="2422" label="RuntimeException" />
      <listitem open="0" type="815" id="2421" label="RuntimeException" />
      <listitem open="0" type="815" id="2424" label="selfThrow" />
      <listitem open="0" type="815" id="2425" label="selfThrow" />
      <listitem open="0" type="815" id="2427" label="~RuntimeException" />
     </listitem>
     <listitem open="0" type="813" id="2428" label="SiconosException" >
      <listitem open="0" type="815" id="2430" label="SiconosException" />
      <listitem open="0" type="815" id="2429" label="SiconosException" />
      <listitem open="0" type="815" id="2432" label="~SiconosException" />
     </listitem>
     <listitem open="0" type="813" id="2263" label="SiconosMatrix" >
      <listitem open="0" type="814" id="2264" label="ipiv" />
      <listitem open="0" type="814" id="2265" label="isPLUFactorized" />
      <listitem open="0" type="814" id="2266" label="isPLUInversed" />
      <listitem open="0" type="814" id="2267" label="mat" />
      <listitem open="0" type="815" id="2268" label="!=" />
      <listitem open="0" type="815" id="2271" label="()" />
      <listitem open="0" type="815" id="2274" label="()" />
      <listitem open="0" type="815" id="2280" label="*" />
      <listitem open="0" type="815" id="2283" label="*" />
      <listitem open="0" type="815" id="2277" label="*" />
      <listitem open="0" type="815" id="2286" label="+" />
      <listitem open="0" type="815" id="2289" label="+=" />
      <listitem open="0" type="815" id="2291" label="-" />
      <listitem open="0" type="815" id="2294" label="/" />
      <listitem open="0" type="815" id="2297" label="=" />
      <listitem open="0" type="815" id="2299" label="==" />
      <listitem open="0" type="815" id="2302" label="BlockMatrixAssemble" />
      <listitem open="0" type="815" id="2304" label="PLUFactorization" />
      <listitem open="0" type="815" id="2305" label="PLUFactorizationInPlace" />
      <listitem open="0" type="815" id="2306" label="PLUForwardBackward" />
      <listitem open="0" type="815" id="2308" label="PLUForwardBackward" />
      <listitem open="0" type="815" id="2310" label="PLUForwardBackwardInPlace" />
      <listitem open="0" type="815" id="2312" label="PLUForwardBackwardInPlace" />
      <listitem open="0" type="815" id="2314" label="PLUInverse" />
      <listitem open="0" type="815" id="2315" label="PLUInverseInPlace" />
      <listitem open="0" type="815" id="2317" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2325" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2319" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2316" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2328" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2323" label="SiconosMatrix" />
      <listitem open="0" type="815" id="2331" label="^" />
      <listitem open="0" type="815" id="2334" label="addRow" />
      <listitem open="0" type="815" id="2337" label="blockMatrixCopy" />
      <listitem open="0" type="815" id="2341" label="display" />
      <listitem open="0" type="815" id="2342" label="eye" />
      <listitem open="0" type="815" id="2343" label="getArray" />
      <listitem open="0" type="815" id="2344" label="getBlock" />
      <listitem open="0" type="815" id="2347" label="getBlock" />
      <listitem open="0" type="815" id="2351" label="getCol" />
      <listitem open="0" type="815" id="2353" label="getLaGenMatDouble" />
      <listitem open="0" type="815" id="2354" label="getRow" />
      <listitem open="0" type="815" id="2356" label="getValue" />
      <listitem open="0" type="815" id="2359" label="isFactorised" />
      <listitem open="0" type="815" id="2360" label="isInversed" />
      <listitem open="0" type="815" id="2361" label="isSquare" />
      <listitem open="0" type="815" id="2362" label="linearSolve" />
      <listitem open="0" type="815" id="2364" label="multTranspose" />
      <listitem open="0" type="815" id="2366" label="rawWrite" />
      <listitem open="0" type="815" id="2369" label="read" />
      <listitem open="0" type="815" id="2372" label="setRow" />
      <listitem open="0" type="815" id="2377" label="setValue" />
      <listitem open="0" type="815" id="2375" label="setValue" />
      <listitem open="0" type="815" id="2381" label="size" />
      <listitem open="0" type="815" id="2383" label="verbose" />
      <listitem open="0" type="815" id="2385" label="write" />
      <listitem open="0" type="815" id="2388" label="zero" />
      <listitem open="0" type="815" id="2389" label="~SiconosMatrix" />
     </listitem>
     <listitem open="0" type="813" id="2396" label="SiconosMatrixException" >
      <listitem open="0" type="815" id="2398" label="SiconosMatrixException" />
      <listitem open="0" type="815" id="2397" label="SiconosMatrixException" />
      <listitem open="0" type="815" id="2401" label="selfThrow" />
      <listitem open="0" type="815" id="2400" label="selfThrow" />
      <listitem open="0" type="815" id="2403" label="~SiconosMatrixException" />
     </listitem>
     <listitem open="0" type="813" id="2441" label="SiconosMemory" >
      <listitem open="0" type="814" id="2442" label="memorySize" />
      <listitem open="0" type="814" id="2443" label="memoryXML" />
      <listitem open="0" type="814" id="2444" label="nbVectorsInMemory" />
      <listitem open="0" type="815" id="2445" label="=" />
      <listitem open="0" type="815" id="2455" label="SiconosMemory" />
      <listitem open="0" type="815" id="2457" label="SiconosMemory" />
      <listitem open="0" type="815" id="2453" label="SiconosMemory" />
      <listitem open="0" type="815" id="2448" label="SiconosMemory" />
      <listitem open="0" type="815" id="2451" label="SiconosMemory" />
      <listitem open="0" type="815" id="2447" label="SiconosMemory" />
      <listitem open="0" type="815" id="2460" label="display" />
      <listitem open="0" type="815" id="2461" label="getMemorySize" />
      <listitem open="0" type="815" id="2462" label="getNbVectorsInMemory" />
      <listitem open="0" type="815" id="2463" label="getSiconosMemoryXML" />
      <listitem open="0" type="815" id="2464" label="getSiconosVector" />
      <listitem open="0" type="815" id="2466" label="saveMemorySizeToXML" />
      <listitem open="0" type="815" id="2467" label="setSiconosMemorySize" />
      <listitem open="0" type="815" id="2469" label="setVectorMemory" />
      <listitem open="0" type="815" id="2471" label="swap" />
      <listitem open="0" type="815" id="2473" label="~SiconosMemory" />
     </listitem>
     <listitem open="0" type="813" id="2474" label="SiconosMemoryException" >
      <listitem open="0" type="815" id="2476" label="SiconosMemoryException" />
      <listitem open="0" type="815" id="2475" label="SiconosMemoryException" />
      <listitem open="0" type="815" id="2479" label="selfThrow" />
      <listitem open="0" type="815" id="2478" label="selfThrow" />
      <listitem open="0" type="815" id="2481" label="~SiconosMemoryException" />
     </listitem>
     <listitem open="0" type="813" id="2488" label="SiconosSharedLibraryException" >
      <listitem open="0" type="815" id="2490" label="SiconosSharedLibraryException" />
      <listitem open="0" type="815" id="2489" label="SiconosSharedLibraryException" />
      <listitem open="0" type="815" id="2492" label="selfThrow" />
      <listitem open="0" type="815" id="2493" label="selfThrow" />
      <listitem open="0" type="815" id="2495" label="~SiconosSharedLibraryException" />
     </listitem>
     <listitem open="0" type="813" id="2025" label="SiconosVector" >
      <listitem open="0" type="814" id="2026" label="composite" />
      <listitem open="0" type="815" id="2027" label="!=" />
      <listitem open="0" type="815" id="2029" label="()" />
      <listitem open="0" type="815" id="2031" label="*=" />
      <listitem open="0" type="815" id="2033" label="+=" />
      <listitem open="0" type="815" id="2035" label="-=" />
      <listitem open="0" type="815" id="2037" label="/=" />
      <listitem open="0" type="815" id="2039" label="=" />
      <listitem open="0" type="815" id="2041" label="==" />
      <listitem open="0" type="815" id="2043" label="SiconosVector" />
      <listitem open="0" type="815" id="2044" label="display" />
      <listitem open="0" type="815" id="2045" label="getArray" />
      <listitem open="0" type="815" id="2046" label="getSvref" />
      <listitem open="0" type="815" id="2047" label="getTabIndex" />
      <listitem open="0" type="815" id="2048" label="getValue" />
      <listitem open="0" type="815" id="2050" label="getValues" />
      <listitem open="0" type="815" id="2052" label="isComposite" />
      <listitem open="0" type="815" id="2053" label="read" />
      <listitem open="0" type="815" id="2056" label="setValue" />
      <listitem open="0" type="815" id="2059" label="setValues" />
      <listitem open="0" type="815" id="2062" label="size" />
      <listitem open="0" type="815" id="2064" label="toString" />
      <listitem open="0" type="815" id="2065" label="write" />
      <listitem open="0" type="815" id="2068" label="~SiconosVector" />
     </listitem>
     <listitem open="0" type="813" id="2404" label="SiconosVectorException" >
      <listitem open="0" type="815" id="2406" label="SiconosVectorException" />
      <listitem open="0" type="815" id="2405" label="SiconosVectorException" />
      <listitem open="0" type="815" id="2408" label="selfThrow" />
      <listitem open="0" type="815" id="2409" label="selfThrow" />
      <listitem open="0" type="815" id="2411" label="~SiconosVectorException" />
     </listitem>
     <listitem open="0" type="813" id="2069" label="SimpleVector" >
      <listitem open="0" type="814" id="2070" label="lavd" />
      <listitem open="0" type="815" id="2073" label="!=" />
      <listitem open="0" type="815" id="2071" label="!=" />
      <listitem open="0" type="815" id="2075" label="()" />
      <listitem open="0" type="815" id="2086" label="*" />
      <listitem open="0" type="815" id="2077" label="*" />
      <listitem open="0" type="815" id="2083" label="*" />
      <listitem open="0" type="815" id="2089" label="*" />
      <listitem open="0" type="815" id="2080" label="*" />
      <listitem open="0" type="815" id="2092" label="*" />
      <listitem open="0" type="815" id="2095" label="*=" />
      <listitem open="0" type="815" id="2097" label="+" />
      <listitem open="0" type="815" id="2100" label="+=" />
      <listitem open="0" type="815" id="2102" label="+=" />
      <listitem open="0" type="815" id="2104" label="-" />
      <listitem open="0" type="815" id="2109" label="-=" />
      <listitem open="0" type="815" id="2107" label="-=" />
      <listitem open="0" type="815" id="2111" label="/" />
      <listitem open="0" type="815" id="2114" label="/=" />
      <listitem open="0" type="815" id="2116" label="=" />
      <listitem open="0" type="815" id="2118" label="=" />
      <listitem open="0" type="815" id="2122" label="==" />
      <listitem open="0" type="815" id="2120" label="==" />
      <listitem open="0" type="815" id="2124" label="SimpleVector" />
      <listitem open="0" type="815" id="2125" label="SimpleVector" />
      <listitem open="0" type="815" id="2127" label="SimpleVector" />
      <listitem open="0" type="815" id="2129" label="SimpleVector" />
      <listitem open="0" type="815" id="2131" label="SimpleVector" />
      <listitem open="0" type="815" id="2134" label="SimpleVector" />
      <listitem open="0" type="815" id="2136" label="add" />
      <listitem open="0" type="815" id="2138" label="addPtr" />
      <listitem open="0" type="815" id="2140" label="addition" />
      <listitem open="0" type="815" id="2142" label="display" />
      <listitem open="0" type="815" id="2143" label="getArray" />
      <listitem open="0" type="815" id="2144" label="getBlock" />
      <listitem open="0" type="815" id="2147" label="getValue" />
      <listitem open="0" type="815" id="2149" label="getValues" />
      <listitem open="0" type="815" id="2154" label="matTransVecMult" />
      <listitem open="0" type="815" id="2151" label="matTransVecMult" />
      <listitem open="0" type="815" id="2157" label="norm" />
      <listitem open="0" type="815" id="2158" label="read" />
      <listitem open="0" type="815" id="2161" label="setValue" />
      <listitem open="0" type="815" id="2164" label="setValues" />
      <listitem open="0" type="815" id="2167" label="size" />
      <listitem open="0" type="815" id="2169" label="subtraction" />
      <listitem open="0" type="815" id="2171" label="write" />
      <listitem open="0" type="815" id="2174" label="zero" />
      <listitem open="0" type="815" id="2175" label="~SimpleVector" />
     </listitem>
     <listitem open="0" type="813" id="2412" label="XMLException" >
      <listitem open="0" type="815" id="2414" label="XMLException" />
      <listitem open="0" type="815" id="2413" label="XMLException" />
      <listitem open="0" type="815" id="2417" label="selfThrow" />
      <listitem open="0" type="815" id="2416" label="selfThrow" />
      <listitem open="0" type="815" id="2419" label="~XMLException" />
     </listitem>
     <listitem open="0" type="830" id="-1" label="Datatypes" >
      <listitem open="1" type="829" id="2019" label="bool" />
      <listitem open="1" type="829" id="2018" label="char" />
      <listitem open="1" type="829" id="2021" label="double" />
      <listitem open="1" type="829" id="2020" label="float" />
      <listitem open="1" type="829" id="2017" label="int" />
      <listitem open="1" type="829" id="2022" label="long" />
      <listitem open="1" type="829" id="2023" label="short" />
      <listitem open="1" type="829" id="2024" label="string" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" />
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration/>
 </XMI.content>
</XMI>
